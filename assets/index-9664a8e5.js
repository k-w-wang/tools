import{r as o,j as p,a as e}from"./index-823f429a.js";import{T as c,S as f,I as y,B as g,a as m,m as k}from"./index-4c6a9410.js";const u=(l,i=0,s="id",n="children")=>[].concat(...l.map(r=>{const d=JSON.parse(JSON.stringify(r[n]));return Reflect.deleteProperty(r,n),[].concat({...r,pId:i},...u(d,r[s],s,n))})),{Title:a}=c,I=[{id:1,children:[{id:2,children:[{id:3,children:[]}]},{id:6,children:[]}]},{id:4,children:[{id:5,children:[]}]}],w=()=>{const[l,i]=o.exports.useState(()=>JSON.stringify(I,null,4)),[s,n]=o.exports.useState(),r=t=>{i(t)},d=()=>{try{const t=JSON.parse(l),T=u(t);n(JSON.stringify(T,null,4))}catch(t){console.log(t),k.error(t.message)}},h=[{key:"1",params:"arr",explain:"必填，需要转化的嵌套树结构数据",type:"arr[]  ",default:"-"},{key:"2",params:"pId",explain:"可选项, 第一层节点的父节点ID",type:"string ｜ number",default:"0"},{key:"3",params:"pKey",explain:"可选项, 父节点id的key值",type:"string",default:"id"},{key:"4",params:"childKey",explain:"可选项, 嵌套的子节点key值",type:"string",default:"children"}],x=[{title:"参数",dataIndex:"params",key:"params"},{title:"说明",dataIndex:"explain",key:"explain"},{title:"类型",dataIndex:"type",key:"type"},{title:"默认值",dataIndex:"default",key:"default"}];return p(c,{children:[e(a,{children:"TreeToFlat"}),e(a,{level:5,children:"TreeToFlat是一个把嵌套树结构转化为数组结构的方法。"}),e(a,{level:3,children:"代码演示"}),e(a,{level:4,children:"基础用法"}),p(f,{children:[e(y.TextArea,{style:{width:400},rows:30,onChange:t=>r(t.target.value),value:l}),e(g,{type:"primary",onClick:d,children:"转化"}),e(y.TextArea,{style:{width:400},rows:30,value:s})]}),e(a,{level:3,children:"API"}),e("pre",{children:e(c.Text,{code:!0,children:"nestedToFlat(arr: any[], pId?: string | number | undefined, pKey?: string | undefined, childKey?: string | undefined): any[]"})}),e(a,{level:3,children:"Params"}),e(m,{dataSource:h,columns:x,pagination:!1})]})};export{w as default};
